name: Build And Release

on:
  push:
    tags:
      - 'v*.*'   # Trigger only for versioned tags like v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest  # Use GitHub runner for Ubuntu to handle matrix
    strategy:
      matrix:
        os: [macos-latest, windows-latest]  # Define matrix strategy for macOS and Windows
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.13'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements file

      # Step 4: Build the executable using PyInstaller for the target OS
      - name: Build executable with PyInstaller
        run: |
          pip install pyinstaller
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            pyinstaller --name DeskSaveApp --onefile --noconsole --add-data "script/file_types.json" script/main.py
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --name DeskSaveApp --onefile --noconsole --add-data "script/file_types.json" script/main.py
          fi

      # Step 5: Upload the generated executables as release assets
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')  # Only run this on tags
        with:
          files: |
            ./dist/DeskSaveApp   # macOS app file
            ./dist/DeskSaveApp.exe  # Windows .exe file
